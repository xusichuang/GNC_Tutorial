
# 静态库
# lib_src := $(shell find src -name *.cpp)
lib_srcs := $(filter-out src/main.cpp,$(shell find src -name *.cpp))
lib_objs := $(patsubst src/%.cpp,objs/%.o,$(lib_srcs))


inclue_paths := /root/GNC_tutorial/Test/include

library_paths := /root/GNC_tutorial/Test/lib

linking_libs := xxx

I_options := $(inclue_paths:%=-I%)
l_options := $(linking_libs:%=-l%)
L_options := $(library_paths:%=-L%)

compile_flags := -g -O3 -std=c++17 $(I_options)
linking_flags := $(l_options) $(L_options)

# 编译静态库
objs/%.o : src/%.cpp
	@mkdir -p $(dir $@)
	@g++ -c $^ -o $@ $(compile_flags)

lib/libxxx.a : $(lib_objs)
	@mkdir -p $(dir $@)
	@ar -r $@ $^

static_lib : lib/libxxx.a

# 链接静态库
objs/main.o : src/main.cpp
	@mkdir -p $(dir $@)
	@g++ -c $^ -o $@ $(compile_flags)

workspace/exec : objs/main.o
	@mkdir -p $(dir $@)
	@g++ $^ -o $@ $(linking_flags)

run : workspace/exec
	@./$<

debug :
	@echo $(lib_src)
	@echo $(lib_objs)

clean :
	@rm -rf objs

.PHONY : debug static_lib

